function Screen.init 0
push constant 0
not
pop static 0
push constant 15
pop static 1
push constant 16384
pop static 3
push constant 16
call Array.new 1
pop static 2
push constant 0
push static 2
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push static 2
add
push constant 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2
push static 2
add
push constant 4
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 3
push static 2
add
push constant 8
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 4
push static 2
add
push constant 16
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 5
push static 2
add
push constant 32
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 6
push static 2
add
push constant 64
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 7
push static 2
add
push constant 128
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 8
push static 2
add
push constant 256
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 9
push static 2
add
push constant 512
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 10
push static 2
add
push constant 1024
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 11
push static 2
add
push constant 2048
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 12
push static 2
add
push constant 4096
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 13
push static 2
add
push constant 8192
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 14
push static 2
add
push constant 16384
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 15
push static 2
add
push constant 32767
not
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
function Screen.clearScreen 1
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push constant 8192
lt
not
if-goto WHILE_END0
push local 0
push static 3
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Screen.setColor 0
push argument 0
pop static 0
push constant 0
return
function Screen.drawPixel 2
push static 3
push argument 1
push constant 5
call Screen.fastBinaryMulter 2
add
push argument 0
push constant 16
call Math.divide 2
add
pop local 0
push local 0
push local 0
call Memory.peek 1
push argument 0
push static 1
and
push static 0
call Screen.setBitOfNum 3
call Memory.poke 2
pop temp 0
push constant 0
return
function Screen.setBitOfNum 0
push argument 2
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 0
push argument 1
push static 1
and
push static 2
add
pop pointer 1
push that 0
or
return
goto IF_END0
label IF_FALSE0
push argument 0
push argument 1
push static 1
and
push static 2
add
pop pointer 1
push that 0
not
and
return
label IF_END0
function Screen.drawLine 12
push argument 2
push argument 0
sub
pop local 1
push argument 3
push argument 1
sub
pop local 2
push static 3
push argument 1
push constant 5
call Screen.fastBinaryMulter 2
add
push argument 0
push constant 16
call Math.divide 2
add
pop local 8
push local 2
push constant 0
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 2
neg
pop local 2
push constant 0
not
pop local 11
label IF_FALSE0
push local 1
push constant 0
lt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 1
neg
pop local 1
push constant 0
not
pop local 10
label IF_FALSE1
push local 2
push constant 0
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 10
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push argument 0
push static 1
and
push static 1
eq
not
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push local 8
call Memory.peek 1
pop local 9
label WHILE_EXP0
push argument 0
push local 3
sub
push static 1
and
push static 1
eq
not
not
if-goto WHILE_END0
push local 9
push argument 0
push local 3
sub
push static 0
call Screen.setBitOfNum 3
pop local 9
push local 3
push constant 1
add
pop local 3
push local 3
push local 1
gt
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push local 8
push local 9
call Memory.poke 2
pop temp 0
push constant 0
return
label IF_FALSE5
goto WHILE_EXP0
label WHILE_END0
push local 8
push local 9
call Memory.poke 2
pop temp 0
push local 8
push constant 1
sub
pop local 8
label IF_FALSE4
label WHILE_EXP1
push local 3
push constant 16
add
push local 1
lt
not
if-goto WHILE_END1
push local 8
push static 0
call Memory.poke 2
pop temp 0
push local 8
push constant 1
sub
pop local 8
push local 3
push constant 16
add
pop local 3
goto WHILE_EXP1
label WHILE_END1
push local 8
call Memory.peek 1
pop local 9
label WHILE_EXP2
push local 3
push local 1
gt
not
not
if-goto WHILE_END2
push local 9
push argument 0
push local 3
sub
push static 0
call Screen.setBitOfNum 3
pop local 9
push local 3
push constant 1
add
pop local 3
goto WHILE_EXP2
label WHILE_END2
push local 8
push local 9
call Memory.poke 2
pop temp 0
push constant 0
return
goto IF_END3
label IF_FALSE3
push argument 0
push static 1
and
push constant 0
eq
not
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push local 8
call Memory.peek 1
pop local 9
label WHILE_EXP3
push argument 0
push local 3
add
push static 1
and
push constant 0
eq
not
not
if-goto WHILE_END3
push local 9
push argument 0
push local 3
add
push static 0
call Screen.setBitOfNum 3
pop local 9
push local 3
push constant 1
add
pop local 3
push local 3
push local 1
gt
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push local 8
push local 9
call Memory.poke 2
pop temp 0
push constant 0
return
label IF_FALSE7
goto WHILE_EXP3
label WHILE_END3
push local 8
push local 9
call Memory.poke 2
pop temp 0
push local 8
push constant 1
add
pop local 8
label IF_FALSE6
label WHILE_EXP4
push local 3
push constant 16
add
push local 1
lt
not
if-goto WHILE_END4
push local 8
push static 0
call Memory.poke 2
pop temp 0
push local 8
push constant 1
add
pop local 8
push local 3
push constant 16
add
pop local 3
goto WHILE_EXP4
label WHILE_END4
push local 8
call Memory.peek 1
pop local 9
label WHILE_EXP5
push local 3
push local 1
gt
not
not
if-goto WHILE_END5
push local 9
push argument 0
push local 3
add
push static 0
call Screen.setBitOfNum 3
pop local 9
push local 3
push constant 1
add
pop local 3
goto WHILE_EXP5
label WHILE_END5
push local 8
push local 9
call Memory.poke 2
pop temp 0
push constant 0
return
label IF_END3
label IF_FALSE2
push local 8
call Memory.peek 1
pop local 9
label WHILE_EXP6
push local 3
push local 1
lt
push local 4
push local 2
lt
or
not
if-goto WHILE_END6
push local 10
if-goto IF_TRUE8
goto IF_FALSE8
label IF_TRUE8
push local 9
push argument 0
push local 3
sub
push static 0
call Screen.setBitOfNum 3
pop local 9
goto IF_END8
label IF_FALSE8
push local 9
push argument 0
push local 3
add
push static 0
call Screen.setBitOfNum 3
pop local 9
label IF_END8
push local 7
push constant 0
gt
not
if-goto IF_TRUE9
goto IF_FALSE9
label IF_TRUE9
push local 4
push constant 1
add
pop local 4
push local 7
push local 1
add
pop local 7
push local 8
push local 9
call Memory.poke 2
pop temp 0
push local 11
if-goto IF_TRUE10
goto IF_FALSE10
label IF_TRUE10
push local 8
push constant 32
sub
pop local 8
goto IF_END10
label IF_FALSE10
push local 8
push constant 32
add
pop local 8
label IF_END10
push local 8
call Memory.peek 1
pop local 9
goto IF_END9
label IF_FALSE9
push local 3
push constant 1
add
pop local 3
push local 7
push local 2
sub
pop local 7
push local 10
if-goto IF_TRUE11
goto IF_FALSE11
label IF_TRUE11
push argument 0
push local 3
sub
push static 1
and
push static 1
eq
if-goto IF_TRUE12
goto IF_FALSE12
label IF_TRUE12
push local 8
push local 9
call Memory.poke 2
pop temp 0
push local 8
push constant 1
sub
pop local 8
push local 8
call Memory.peek 1
pop local 9
label IF_FALSE12
goto IF_END11
label IF_FALSE11
push argument 0
push local 3
add
push static 1
and
push constant 0
eq
if-goto IF_TRUE13
goto IF_FALSE13
label IF_TRUE13
push local 8
push local 9
call Memory.poke 2
pop temp 0
push local 8
push constant 1
add
pop local 8
push local 8
call Memory.peek 1
pop local 9
label IF_FALSE13
label IF_END11
label IF_END9
goto WHILE_EXP6
label WHILE_END6
push local 8
push local 9
call Memory.poke 2
pop temp 0
push constant 0
return
function Screen.drawRectangle 0
label WHILE_EXP0
push argument 1
push argument 3
gt
not
not
if-goto WHILE_END0
push argument 0
push argument 1
push argument 2
push argument 1
call Screen.drawLine 4
pop temp 0
push argument 1
push constant 1
add
pop argument 1
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Screen.drawCircle 3
push argument 2
pop local 0
push argument 0
push local 0
sub
push argument 1
push argument 0
push local 0
add
push argument 1
call Screen.drawLine 4
pop temp 0
label WHILE_EXP0
push local 0
push local 1
lt
not
not
if-goto WHILE_END0
push argument 0
push local 1
sub
push constant 1
sub
push argument 1
push local 0
add
push argument 0
push local 1
add
push argument 1
push local 0
add
call Screen.drawLine 4
pop temp 0
push argument 0
push local 0
sub
push constant 1
sub
push argument 1
push local 1
add
push argument 0
push local 0
add
push argument 1
push local 1
add
call Screen.drawLine 4
pop temp 0
push argument 0
push local 0
sub
push constant 1
sub
push argument 1
push local 1
sub
push argument 0
push local 0
add
push argument 1
push local 1
sub
call Screen.drawLine 4
pop temp 0
push argument 0
push local 1
sub
push constant 1
sub
push argument 1
push local 0
sub
push argument 0
push local 1
add
push argument 1
push local 0
sub
call Screen.drawLine 4
pop temp 0
push local 2
push constant 0
gt
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 1
push constant 1
add
pop local 1
push local 2
push local 1
add
push local 1
add
push constant 1
add
pop local 2
goto IF_END0
label IF_FALSE0
push local 0
push constant 1
sub
pop local 0
push local 2
push local 0
sub
push local 0
sub
push constant 1
sub
pop local 2
label IF_END0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Screen.getBitSetter 2
push constant 1
pop local 0
label WHILE_EXP0
push local 1
push argument 0
lt
not
if-goto WHILE_END0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push local 0
return
function Screen.fastBinaryMulter 1
label WHILE_EXP0
push local 0
push argument 1
lt
not
if-goto WHILE_END0
push argument 0
push argument 0
add
pop argument 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push argument 0
return
