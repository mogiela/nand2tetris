function Memory.init 0
push constant 0
pop static 0
push constant 2048
pop static 1
push constant 2048
pop static 2
push constant 0
push static 1
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push static 1
add
push constant 14335
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
function Memory.peek 0
push argument 0
push static 0
add
pop pointer 1
push that 0
return
function Memory.poke 0
push argument 0
push static 0
add
push argument 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
function Memory.alloc 6
push argument 0
push constant 0
gt
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 5
call Sys.error 1
pop temp 0
call Sys.halt 0
pop temp 0
label IF_FALSE0
push static 2
push constant 0
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 6
call Sys.error 1
pop temp 0
call Sys.halt 0
pop temp 0
label IF_FALSE1
push argument 0
push constant 2
add
pop local 5
push static 2
pop local 0
push constant 1
push local 0
add
pop pointer 1
push that 0
pop local 1
push constant 0
push local 0
add
pop pointer 1
push that 0
pop local 2
label WHILE_EXP0
push local 2
push constant 0
eq
not
not
if-goto WHILE_END0
push constant 1
push local 2
add
pop pointer 1
push that 0
pop local 3
push local 0
push local 1
add
push local 2
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 1
push local 0
add
push local 1
push local 3
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
push local 0
add
push constant 0
push local 2
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE2
push constant 0
push local 0
add
pop pointer 1
push that 0
pop local 0
push constant 1
push local 0
add
pop pointer 1
push that 0
pop local 1
push constant 0
push local 0
add
pop pointer 1
push that 0
pop local 2
goto WHILE_EXP0
label WHILE_END0
push static 2
pop local 0
push constant 1
push local 0
add
pop pointer 1
push that 0
pop local 1
push constant 0
push local 0
add
pop pointer 1
push that 0
pop local 2
push local 1
push local 5
push constant 2
add
gt
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push constant 1
push local 0
add
push local 1
push local 5
sub
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push local 1
add
push local 5
sub
pop local 4
push constant 1
push local 4
add
push local 5
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 4
push constant 2
add
return
goto IF_END3
label IF_FALSE3
push local 1
push local 5
lt
not
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push local 2
pop static 2
push local 0
push constant 2
add
return
label IF_FALSE4
label IF_END3
label WHILE_EXP1
push local 2
push constant 0
eq
not
not
if-goto WHILE_END1
push constant 1
push local 2
add
pop pointer 1
push that 0
pop local 3
push local 3
push local 5
push constant 2
add
gt
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push constant 0
push local 0
add
push constant 0
push local 2
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 2
push constant 2
add
return
goto IF_END5
label IF_FALSE5
push local 3
push local 5
lt
not
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push constant 1
push local 2
add
push local 3
push local 5
sub
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 2
push local 3
add
push local 5
sub
pop local 4
push constant 1
push local 4
add
push local 5
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 4
push constant 2
add
return
label IF_FALSE6
label IF_END5
push constant 0
push local 0
add
pop pointer 1
push that 0
pop local 0
push constant 1
push local 0
add
pop pointer 1
push that 0
pop local 1
push constant 0
push local 0
add
pop pointer 1
push that 0
pop local 2
goto WHILE_EXP1
label WHILE_END1
push constant 6
call Sys.error 1
pop temp 0
call Sys.halt 0
pop temp 0
push constant 0
return
function Memory.smartDeAlloc 4
push static 2
pop local 0
push constant 1
push local 0
add
pop pointer 1
push that 0
pop local 1
push constant 0
push local 0
add
pop pointer 1
push that 0
pop local 2
push constant 1
push local 2
add
pop pointer 1
push that 0
pop local 3
label WHILE_EXP0
push local 2
push constant 0
eq
not
not
if-goto WHILE_END0
push local 2
push local 3
add
push argument 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 1
push local 2
add
push local 3
push constant 1
push argument 0
add
pop pointer 1
push that 0
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
goto IF_END0
label IF_FALSE0
push argument 0
push constant 1
push argument 0
add
pop pointer 1
push that 0
add
push local 2
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 1
push argument 0
add
push constant 1
push argument 0
add
pop pointer 1
push that 0
push local 3
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
push argument 0
add
push constant 0
push local 2
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
push local 0
add
push argument 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
label IF_FALSE1
label IF_END0
push constant 0
push local 0
add
pop pointer 1
push that 0
pop local 0
push constant 1
push local 0
add
pop pointer 1
push that 0
pop local 1
push constant 0
push local 0
add
pop pointer 1
push that 0
pop local 2
push constant 1
push local 2
add
pop pointer 1
push that 0
pop local 3
goto WHILE_EXP0
label WHILE_END0
push constant 0
push argument 0
add
push static 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push argument 0
push constant 2
sub
pop static 2
push constant 0
return
function Memory.deAlloc 0
push constant 2
neg
push argument 0
add
push static 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push argument 0
push constant 2
sub
pop static 2
push constant 0
return
