// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Keyboard.jack

/**
 * A library for handling user input from the keyboard.
 */
class Keyboard {
    static int keyData;

    /** Initializes the keyboard. */
    function void init() {
        let keyData = 24576;
        return;
    }

    /**
     * Returns the ASCII code (as char) of the currently pressed key,
     * or 0 if no key is currently pressed.
     * Recognizes all ASCII characters, as well as the following extension
     * of action keys:
     * New line = 128 = String.newline()
     * Backspace = 129 = String.backspace()
     * Left Arrow = 130
     * Up Arrow = 131
     * Right Arrow = 132
     * Down Arrow = 133
     * Home = 134
     * End = 135
     * Page Up = 136
     * Page Down = 137
     * Insert = 138
     * Delete = 139
     * ESC = 140
     * F1 - F12 = 141 - 152
     */
    function char keyPressed() {
        return Memory.peek(keyData);
    }

    /**
     * Reads the next character from the keyboard.
     * waits until a key is pressed and then released, then echoes
     * the key to the screen, and returns the value of the pressed key.
     */
    function char readChar() {
        var int key, c;
        while (key=0){
            let key = Memory.peek(keyData);
        }
        let c = key;
        while(~(key=0)){
            let key = Memory.peek(keyData);
        }
        do Output.printChar(c);
        return c;
    }

    /**
     * Prints the message on the screen, reads the next line
     * (until a newline character) from the keyboard, and returns its value.
     */
    function String readLine(String message) {
        var String answer, temp;
        var char c, newline;
        var int maxLen;
        let maxLen = 10;
        let newline = String.newLine();
        do Output.printString(message);
        let answer = String.new(maxLen);
        let c = Keyboard.readChar();
        while(~(c = newline)){
            if (answer.length() = maxLen){
                let maxLen = maxLen + 10;
                let temp = String.new(maxLen);
                do temp.setString(answer);
                do answer.dispose();
                let answer = temp;
            }
            do answer.appendChar(c);
            let c = Keyboard.readChar();
        }
        return answer;
    }

    /**
     * Prints the message on the screen, reads the next line
     * (until a newline character) from the keyboard, and returns its
     * integer value (until the first non numeric character).
     */
    function int readInt(String message) {
        var String answer;
        var char dig;
        var int i, len, num;
        var boolean isNeg;

        let answer = Keyboard.readLine(message);
        let len = answer.length();
        let dig = answer.charAt(0);
        if(dig = 45){
            let isNeg = true;
            let dig = answer.charAt(1);
            let i = 1;
        }
        while ((47<dig) & (dig<58) & (i<len)){
            let num = (num*10) + (dig-48);
            let i = i + 1;
            let dig = answer.charAt(i);
        }
        do answer.dispose();
        if (isNeg){
            return -num;
        }
        return num;
    }
}
